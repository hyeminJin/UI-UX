[13-8] 다음의 코드는 텍스트기반의 타자연습게임인데 WordGenerator라는 쓰레드가 Vector에 2초마다 단어를 하나씩 추가하고,
사용자가 단어를 입력하면 Vector에서 일치하는 단어를 삭제하도록 되어 있다. WordGenerator의 run( )을 완성하시오.

import java.util.*;



class Exercise13_8 {

	Vector words = new Vector();
	String[] data = { "태연", "유리", "윤아", "효연", "수영", "서현", "티파니", "써니", "제시카" };

	int interval = 2 * 1000; // 2초
	WordGenerator wg = new WordGenerator();

	public static void main(String args[]) {
		Exercise13_9 game = new Exercise13_9();
		game.wg.start();
		Vector words = game.words;

		while (true) {
			System.out.println(words);
			String prompt = ">>";
			System.out.print(prompt);
			// 화면으로부터 라인단위로 입력받는다.
			Scanner s = new Scanner(System.in);
			String input = s.nextLine().trim();
			int index = words.indexOf(input);

			if (index != -1) {
				words.remove(index);
			}

		}

	}
	class WordGenerator extends Thread {
		public void run() {

			/*

			 * (1) 아래의 로직에 맞게 코드를 작성하시오. 

			 * 1.interval(2초)마다 배열 data의 값 중 하나를 임의로 선택해서 

			 * 2.words에 저장한다.

			 */

		}

	}

}



[실행결과]

[] 

>>  

[서현] 

>> 서현  

[수영,윤아] 

>> 수영 

[윤아,유리] 

>> 유리 

[윤아,티파니] 

>> 티파니

[윤아,윤아,유리] 

>> 윤아

[윤아,유리]

>> 유리

[윤아,효연] 

>> 효연 

[윤아,티파니] 

>> 윤아

[티파니,윤아] 

>> 티파니

[윤아,수영,써니] 

>>


================================================================================================================
import java.util.List;
import java.util.LinkedList;
import java.util.Iterator;

class IteratorCollection {
    public static void main(String[] args) {
        List<String> list = new LinkedList<>();
        
        // 인스턴스 저장 
        list.add("Toy");  list.add("Box");
        list.add("Robot");  list.add("Box");
	
        // 반복자 획득
        Iterator<String> itr = list.iterator();
        
        // 반복자를 이용한 순차적 참조
        while(itr.hasNext())
            System.out.print(itr.next() + '\t');

        System.out.println();
        
        // 반복자 다시 획득
        itr = list.iterator();
                		
        // "Box"의 삭제 
        String str;
        while(itr.hasNext()) {
            str = itr.next();
            
            if(str.equals("Box"))
                itr.remove();
        }
    
        // 반복자 다시 획득
        itr = list.iterator();
        
        // 삭제 후 결과 확인
        while(itr.hasNext())
            System.out.print(itr.next() + '\t');

        System.out.println();
    }
}
================================================================================
class Exercise7_18 {
	 /* 메서드를 작성하시오 (1) action . */ 
	 
	public static void main(String[] args) { 
	Robot[] arr = { new DanceRobot(), new SingRobot(), new DrawRobot()};
	
	for(int i=0; i< arr.length;i++) 
	{ 
		action(arr[i]); 
	} 
	// main
 } 
class Robot {}
class DanceRobot extends Robot { 
	void dance() 
	{ 
	춤을 춥니다 System.out.println(" ."); 
	} 
}

class SingRobot extends Robot { void sing() { 노래를 합니다 System.out.println(" ."); } } class DrawRobot extends Robot { void draw() { 그림을 그립니다 System.out.println(" ."); } }
======================================================================
class TV {
	private int size;
	public TV(int size) { this.size = size; }
	protected int getSize() { return size; }
}

public static void main(String args[]) {
		colorTV myTV = new ColorTV(32, 1024);
		myTV.printProperty();
}
출력결과
 32 인치 1024 컬러.
TV를 상속받은 ColorTV 클래스를 작성하라.
=============================================================
다음 main() 메소드와 실행 결과를 참고하여 ColorTV를 상속받는 IPTV 클래스를 작성하라.

public static void main(String[] args) {
   IPTV iptv = new IPTV("192.1.1.2", 32, 2048); //"192.1.1.2" 주소에 32인치, 2048컬러
   iptv.printProperty();
}
출력결과:
나의 IPTV는 192.1.1.2 주소의 32인치 2048컬러
